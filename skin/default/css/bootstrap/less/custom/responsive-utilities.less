@media (max-width: @screen-xs-max) {
  .pull-xs-left {
    float: left !important;
  }
  .pull-xs-right {
    float: right !important;
  }
}

@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
  .pull-sm-left {
    float: left !important;
  }
  .pull-sm-right {
    float: right !important;
  }
}

@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
  .pull-md-left {
    float: left !important;
  }
  .pull-md-right {
    float: right !important;
  }
}

@media (min-width: @screen-lg-min) {
  .pull-lg-left {
    float: left !important;
  }
  .pull-lg-right {
    float: right !important;
  }
}
/**
Require bootstrap variable @grid-columns

Structure Exemple to center 3 columns

<div class="center-column-3">
	<div class="col-lg-2"></div>
	<div class="col-lg-2"></div>
	<div class="col-lg-2"></div>
</div>

**/
.calc-margin(@n, @i, @max, @cm: 1) when (@cm <= @max) {
  @col-width: (100%/@n)*@cm;
  @offset: (100% - (@i*@col-width))/2;
  .col-xs-@{cm}, .col-sm-@{cm}, .col-md-@{cm}, .col-lg-@{cm}{
    &:first-child{
      margin-left: @offset;
    }
  }
  .calc-margin(@n, @i, @max, (@cm + 1));
}
.center-columns(@n, @i: 1) when (@i =< (@n - 1)) {
  .center-column-@{i} {
    @r: mod(@n,@i);
    @max: (@n - @r)/@i;
    .calc-margin(@n, @i, @max);
  }
  .center-columns(@n, (@i + 1));
}
.center-columns(@grid-columns);